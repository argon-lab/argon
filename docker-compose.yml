version: '3.8'

services:
  # MongoDB for primary data storage and change streams
  mongodb:
    image: mongo:7.0
    container_name: argon-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-replica-set.js:/docker-entrypoint-initdb.d/init-replica-set.js
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and message queuing
  redis:
    image: redis:7.2-alpine
    container_name: argon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Engine Service (Performance Critical)
  engine:
    build:
      context: ./services/engine
      dockerfile: Dockerfile
    container_name: argon-engine
    ports:
      - "8080:8080"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/?replicaSet=rs0
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/engine:/app
    working_dir: /app

  # Python API Service (Developer Productivity)
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: argon-api
    ports:
      - "3000:3000"
    environment:
      - GO_ENGINE_HOST=engine
      - GO_ENGINE_PORT=8080
      - PORT=3000
      - LOG_LEVEL=info
    depends_on:
      - engine
    volumes:
      - ./services/api:/app
    working_dir: /app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Web Dashboard (Development mode)
  web:
    build:
      context: ./services/web
      dockerfile: Dockerfile.dev
    container_name: argon-web
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NEXT_PUBLIC_WS_URL=ws://localhost:3000
    depends_on:
      - api
    volumes:
      - ./services/web:/app
      - /app/node_modules
    working_dir: /app

volumes:
  mongodb_data:
  redis_data:

networks:
  default:
    name: argon-network