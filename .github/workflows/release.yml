name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binary
      working-directory: ./cli
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p ../dist
        if [ "$GOOS" = "windows" ]; then
          go build -ldflags="-s -w" -o ../dist/argon-${{ matrix.goos }}-${{ matrix.goarch }}.exe .
        else
          go build -ldflags="-s -w" -o ../dist/argon-${{ matrix.goos }}-${{ matrix.goarch }} .
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dist/

  release:
    name: Create release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: dist/

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # publish-npm:
  #   name: Publish to npm
  #   needs: release
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: '18'
  #       registry-url: 'https://registry.npmjs.org'
  #
  #   - name: Publish to npm
  #     working-directory: ./npm
  #     run: npm publish --access public
  #     env:
  #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}